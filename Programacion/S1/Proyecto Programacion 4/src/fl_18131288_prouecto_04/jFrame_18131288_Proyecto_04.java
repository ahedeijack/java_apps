/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fl_18131288_prouecto_04;

import Utilerias.JTable.ColorCeldas;
import java.awt.Color;
import java.util.Arrays;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ahedeijak
 */
public class jFrame_18131288_Proyecto_04 extends javax.swing.JFrame {

    /**
     * Creates new form jFrame_18131288_Proyecto_04
     */
    public jFrame_18131288_Proyecto_04() {
        initComponents();
        jTabMes.setShowGrid(true);
        jTabAdds.setShowGrid(true);
        jTabOrden.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSpinMeses = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabMes = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabAdds = new javax.swing.JTable();
        jLabMeses = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabMeses1 = new javax.swing.JLabel();
        jSpinInfo = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButCalculo = new javax.swing.JButton();
        jLabSum = new javax.swing.JLabel();
        jLabProm = new javax.swing.JLabel();
        jButOrdenar = new javax.swing.JButton();
        jButMedia = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButSalir = new javax.swing.JButton();
        jButPintar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabOrden = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSC = new javax.swing.JSpinner();
        jSR = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fl_18131288_prouecto_04/Asignacion.jpg"))); // NOI18N
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);

        jSpinMeses.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinMesesStateChanged(evt);
            }
        });

        jTabMes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabMes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mes"
            }
        ));
        jScrollPane1.setViewportView(jTabMes);

        jTabAdds.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabAdds.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTabAdds);

        jLabMeses.setText("Meses");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 14)); // NOI18N
        jLabel2.setText("CALCULA CUANTAS CANCIONES AGREGASTE A TUS PLAYLIST DURANTE LOS MESES DEL AÃ‘O.");
        jLabel2.setOpaque(true);

        jLabMeses1.setText("Generos");

        jSpinInfo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinInfoStateChanged(evt);
            }
        });

        jButton1.setText("Llenar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButCalculo.setText("Calcular");
        jButCalculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButCalculoActionPerformed(evt);
            }
        });

        jLabSum.setBackground(new java.awt.Color(255, 255, 255));
        jLabSum.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabSum.setOpaque(true);

        jLabProm.setBackground(new java.awt.Color(255, 255, 255));
        jLabProm.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabProm.setOpaque(true);

        jButOrdenar.setText("Ordenar");
        jButOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButOrdenarActionPerformed(evt);
            }
        });

        jButMedia.setText("Pintar Media");
        jButMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButMediaActionPerformed(evt);
            }
        });

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButSalir.setText("Salir");
        jButSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButSalirActionPerformed(evt);
            }
        });

        jButPintar.setText("Pintar");
        jButPintar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButPintarActionPerformed(evt);
            }
        });

        jTabOrden.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTabOrden);

        jLabel3.setText("Columna");

        jLabel4.setText("Renglon");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSpinMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabMeses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabMeses1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(204, 204, 204))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabProm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabSum, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButPintar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSC)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jSR, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButCalculo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButOrdenar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabMeses1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButCalculo)
                            .addComponent(jButOrdenar)
                            .addComponent(jButMedia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabSum, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabProm, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButPintar)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButSalir)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinMesesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinMesesStateChanged
        // Se obtiene el valor del Spinner y se da el nombre de 'reng', para poder
        //identificar los renglones.
        int renglones = Integer.parseInt(jSpinMeses.getValue()+"");
            if (renglones > 12){
                renglones = 12;
                jSpinMeses.setValue("12");
            }
        DefaultTableModel modelo = (DefaultTableModel)jTabAdds.getModel();
        modelo.setRowCount(renglones);
        
        DefaultTableModel modeloNom = (DefaultTableModel)jTabMes.getModel();
        modeloNom.setRowCount(renglones);
        
        DefaultTableModel modeloOr = (DefaultTableModel)jTabOrden.getModel();
        modeloOr.setRowCount(renglones);
        
        
        //Error 1.-No inserta los nombres en la tabla.
        //Solucion: El arreglo era mÃ¡s grande
                  //Que los valores que lo alimentaban
        String [] mes = new String[12];
        mes[0] = "Enero";
        mes[1] = "Febrero";
        mes[2] = "Marzo";
        mes[3] = "Abril";
        mes[4] = "Mayo";
        mes[5] = "Junio";
        mes[6] = "Julio";
        mes[7] = "Agosto";
        mes[8] = "Septiembre";
        mes[9] = "Octubre";
        mes[10] = "Noviembre";
        mes[11] = "Diciembre";
        
        for (int r = 0;r<jTabMes.getRowCount();r++) 
            jTabMes.setValueAt(mes[r],r,0); 
        
    
    }//GEN-LAST:event_jSpinMesesStateChanged

    private void jSpinInfoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinInfoStateChanged
        // TODO add your handling code here:
        int columnas  = Integer.parseInt(jSpinInfo.getValue()+"");
        if (columnas > 6){
            columnas = 6;
            jSpinMeses.setValue("12");
        }
        DefaultTableModel modelo = (DefaultTableModel)jTabAdds.getModel();
        DefaultTableModel modeloOr = (DefaultTableModel)jTabOrden.getModel();
        String[] informacion= {"Rock","Pop","Reggaeton","Hip-Hop","Indie","Jazz"};
       //Se obtiene la informacion del arreglo anterior para poder alimentar
       //las columnas a llenar
       modelo.setColumnIdentifiers(informacion);
       modelo.setColumnCount(columnas);
       modeloOr.setColumnIdentifiers(informacion);
       modeloOr.setColumnCount(columnas);
       
    }//GEN-LAST:event_jSpinInfoStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Random azar = new Random();

        for (int r =0;r<jTabAdds.getRowCount(); r++)
            for(int c =0;c<jTabAdds.getColumnCount();c++)
                //La funciÃ³n set.valueAt pide 3 tipos de informaciÃ³n:
                //Valor,renglones,columnas
                jTabAdds.setValueAt((15+azar.nextInt(40)),r,c);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButCalculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButCalculoActionPerformed
        // TODO add your handling code here:
        //Se crea el arreglo que llevara la informacion de la tabla de generos.
        double [][] info = new double[jTabAdds.getRowCount()][jTabAdds.getColumnCount()];
        int r, c;
        //Con la informaciÃ³n obtenida de la variable, llenamos nuestro arreglo r,c.
        for (r = 0; r<info.length; r++){
            for (c = 0; c<info[0].length; c++){
                info[r][c] = Double.parseDouble(jTabAdds.getValueAt(r, c)+"");
            }
        }
        
     //Se crean las variables que utilizara el usuario para obtener la info deseada para pintar.
     double suma = 0, promedio;
     
     //
     for (r = 0; r<info.length; r++){
            for (c = 0; c<info[0].length; c++){
                suma += info[r][c];
           
            }
            promedio = suma / (info.length * info[0].length);
            jLabSum.setText("Agregaste "+suma+" canciones en 12 meses.");
            jLabProm.setText("Agregaste "+promedio+" canciones por mes");
        }
     
     
     //
    }//GEN-LAST:event_jButCalculoActionPerformed

    private void jButOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButOrdenarActionPerformed
        double [][]datos =new double[jTabAdds.getRowCount()]
                              [jTabAdds.getColumnCount()]; 
        int r,c,i;
        i=0;
        for(r=0;r<jTabAdds.getRowCount(); r++)
             for(c=0;c<jTabAdds.getColumnCount(); c++)
             {
                 datos[r][c]=Double.parseDouble(jTabAdds.getValueAt(r,c)+"");
             }
        double[] renglon= new double[datos.length*datos[0].length];
        
        for(r=0;r<datos.length; r++)
             for(c=0;c<datos[0].length; c++)
             {
                 renglon[i]=datos[r][c];
                 i++;
             }
        Arrays.sort(renglon);
        i=0;
        //Errores 4,5,6: El For 1 estaba mal en el contador. For 3, estaba mal en el Ãºltimo contador
        //En el .setValueAt, el valor renglon estaba mal.
        for (r = 0; r<jTabOrden.getRowCount(); r++){
            for(c = 0; c<jTabOrden.getColumnCount(); c++){
                for(r = jTabOrden.getRowCount()-1; r>=0; r--){
                    for(c = jTabOrden.getColumnCount()-1;c>=0;c--){
                        jTabOrden.setValueAt(renglon[i], r, c);
                        i++;
                    }
                }
            }
        }

    }//GEN-LAST:event_jButOrdenarActionPerformed

    private void jButMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButMediaActionPerformed
        // TODO add your handling code here:
         double [][] datos = new double[jTabOrden.getRowCount()]
                                      [jTabOrden.getColumnCount()];
        int r, c;
        
        //Se llena la matriz con los valores obtenidos del jTableAdds
        for(r=0; r<datos.length; r++){
            for(c=0; c<datos[0].length; c++){
                datos[r][c] = Double.parseDouble(jTabOrden.getValueAt(r, c)+"");
            }
        }
        //Vamos a declarar las variables que daran color a las celdas y sus diferenciadores.
        int suma, promedio;
        suma = 0;
        
        
        for(r=0; r<datos.length; r++){
            for(c=0; c<datos[0].length; c++){    
                suma += datos[r][c];
            }
        }
        
        promedio = suma /(datos.length*datos[0].length);
        ColorCeldas celdas = new ColorCeldas(jTabOrden);
        
        for(r=0; r<datos.length; r++)
        {
            for(c=0; c<datos[0].length; c++)
            {
               if(datos[r][c]<promedio)
               {
                   celdas.addCelda(r,c,Color.LIGHT_GRAY);
               }
            }
        }
        celdas.repaint(); 
    }//GEN-LAST:event_jButMediaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Se obtiene la informacion de la jTabAdds, y se empiezan a borrar
        //Los renglones, asÃ­ como pintar de nuevos los que ya estaban.
        for (int r=0; r<jTabAdds.getRowCount(); r++)
            for(int c=0; c<jTabAdds.getColumnCount(); c++)
         jTabAdds.setValueAt(null,r , c);
        for (int r=0; r<jTabOrden.getRowCount(); r++)
            for(int c=0; c<jTabOrden.getColumnCount(); c++)
         jTabOrden.setValueAt(null,r , c);
         jLabSum.setText("");
         jLabProm.setText("");
        ColorCeldas celdas = new ColorCeldas(jTabAdds);
        ColorCeldas celdasOrden = new ColorCeldas(jTabOrden);
        int r,c;
        c=0;
        r=0;
        celdas.addCelda(r,c, Color.WHITE);
        celdasOrden.addCelda(r,c, Color.WHITE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButSalirActionPerformed

    private void jButPintarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButPintarActionPerformed
        // TODO add your handling code here:
        double  [][] marcador = new double[jTabOrden.getRowCount()][jTabOrden.getColumnCount()];
        int renglon = Integer.parseInt(jSR.getValue()+"")-1;
        int columna = Integer.parseInt(jSC.getValue()+"")-1;
       
        int r,c;
        
        for(r = 0; r<marcador.length;r++){
            for(c =0;c<marcador[0].length; c++){
                marcador[r][c] = Double.parseDouble(jTabOrden.getValueAt(r,c)+"");
            }
        }
        
        
        int  pintaR = renglon;
        int  pintaC = columna;
        
        ColorCeldas celda = new ColorCeldas(jTabOrden);
        
        for(r = 0;r<jTabOrden.getRowCount(); r++){
            for (c = 0; c<jTabOrden.getColumnCount(); c++){
                if(r == pintaR){
                    celda.addCelda(r, c, Color.yellow);
                }
                if(c == pintaC){
                    celda.addCelda(r, c, Color.yellow);
                }
            }
    }
        //celda.addCelda(pintaR, pintaC, Color.yellow);
        celda.repaint();
    }//GEN-LAST:event_jButPintarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFrame_18131288_Proyecto_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFrame_18131288_Proyecto_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFrame_18131288_Proyecto_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFrame_18131288_Proyecto_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFrame_18131288_Proyecto_04().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButCalculo;
    private javax.swing.JButton jButMedia;
    private javax.swing.JButton jButOrdenar;
    private javax.swing.JButton jButPintar;
    private javax.swing.JButton jButSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabMeses;
    private javax.swing.JLabel jLabMeses1;
    private javax.swing.JLabel jLabProm;
    private javax.swing.JLabel jLabSum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSpinner jSC;
    private javax.swing.JSpinner jSR;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinInfo;
    private javax.swing.JSpinner jSpinMeses;
    private javax.swing.JTable jTabAdds;
    private javax.swing.JTable jTabMes;
    private javax.swing.JTable jTabOrden;
    // End of variables declaration//GEN-END:variables
}
