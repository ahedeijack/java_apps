/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app_ordenamientos;

import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahdeijack
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    DefaultTableModel modelo;
    Random r = new Random();
    Ordenamiento datos = new Ordenamiento();
    int vec[];
    public Principal() {
        initComponents();
        modelo =  (DefaultTableModel)jTable1.getModel();
        modelo.setRowCount(Integer.parseInt(elementos.getValue()+""));
    }
    public void llenar(){
        if (verificar() == false) {
                        vec = new int[modelo.getRowCount()];
                            for (int i = 0; i < modelo.getRowCount(); i++) {
                                vec[i] = Integer.parseInt(modelo.getValueAt(i, 0)+"");
                            }
        
        } else {
            JOptionPane.showMessageDialog(this, "Intenta llenar todos los datos, si no puedes, presiona Aleatorios.");
        }
        
    }
    
    public boolean verificar(){
        for (int i = 0; i < modelo.getRowCount(); i++) {
            if (modelo.getValueAt(i, 0) == null) {
                JOptionPane.showMessageDialog(this, "La tabla tiene datos incompletos.");
                return true;
            } 
    }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        J1 = new javax.swing.JTextField();
        elementos = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        Burbuja = new javax.swing.JButton();
        ShakeSort = new javax.swing.JButton();
        QuickSort = new javax.swing.JButton();
        Shell = new javax.swing.JButton();
        ShellBandera = new javax.swing.JButton();
        BurbujaBandera = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabInter = new javax.swing.JLabel();
        jLabComp = new javax.swing.JLabel();
        JD = new javax.swing.JRadioButton();
        JA = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();

        jButton9.setText("Descendente");

        jButton10.setText("Ascendente");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 110, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Elementos"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 71, 520));
        getContentPane().add(J1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 110, -1));

        elementos.setModel(new javax.swing.SpinnerNumberModel(5, 5, 26, 1));
        elementos.setToolTipText("Aumenta o Disminuye los datos de la tabla");
        elementos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                elementosStateChanged(evt);
            }
        });
        getContentPane().add(elementos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 103, 110, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Agregar");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 78, 110, -1));

        jButton2.setText("Aleatorios");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 62, 110, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 163, 110, 10));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Orden");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 179, 110, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 257, 110, 10));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Metodos");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 273, 110, -1));

        Burbuja.setText("Burbuja");
        Burbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BurbujaActionPerformed(evt);
            }
        });
        getContentPane().add(Burbuja, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 293, 110, -1));

        ShakeSort.setText("Shake Sort");
        ShakeSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShakeSortActionPerformed(evt);
            }
        });
        getContentPane().add(ShakeSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 322, 110, -1));

        QuickSort.setText("QuickSort");
        QuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuickSortActionPerformed(evt);
            }
        });
        getContentPane().add(QuickSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 110, -1));

        Shell.setText("Shell");
        Shell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShellActionPerformed(evt);
            }
        });
        getContentPane().add(Shell, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 351, 110, -1));

        ShellBandera.setText("Shell B");
        ShellBandera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShellBanderaActionPerformed(evt);
            }
        });
        getContentPane().add(ShellBandera, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 438, 110, -1));

        BurbujaBandera.setText("Burbuja B");
        BurbujaBandera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BurbujaBanderaActionPerformed(evt);
            }
        });
        getContentPane().add(BurbujaBandera, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 409, 110, -1));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 110, 10));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Intercambios");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 80, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Comparaciones");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 80, -1));

        jLabInter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabInter, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, 20, 10));

        jLabComp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabComp, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, 20, 10));

        buttonGroup1.add(JD);
        JD.setText("Descendente");
        getContentPane().add(JD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        buttonGroup1.add(JA);
        JA.setSelected(true);
        JA.setText("Ascendente");
        getContentPane().add(JA, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 90, -1));

        jLabel4.setBackground(new java.awt.Color(0, 102, 204));
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void elementosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_elementosStateChanged
        // TODO add your handling code here:
        modelo.setRowCount(Integer.parseInt(elementos.getValue()+""));
    }//GEN-LAST:event_elementosStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Object o []= new Object[1];
        o[0] = J1.getText();
        
        if (o[0].equals("")) {
            o[0]=0;
        }
        modelo.addRow(o);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       
        for (int i = 0; i < modelo.getRowCount(); i++) {
        while(modelo.getValueAt(i, 0) == null){
            modelo.setValueAt(r.nextInt(99), i, 0);
        }    
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BurbujaActionPerformed
        // TODO add your handling code here:
    llenar();
        if (JA.isSelected()) { //Burbuja
        datos.BurbujaASC(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                } 
        } else {
                    datos.BurbujaDSC(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                } 
        }
                 
    }//GEN-LAST:event_BurbujaActionPerformed

    private void ShakeSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShakeSortActionPerformed
        // TODO add your handling code here:   
    llenar();
            if (JA.isSelected()) {
            datos.Shaker_SortASC(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                }
        } else {
                            datos.Shaker_SortDSC(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                }
            }
    }//GEN-LAST:event_ShakeSortActionPerformed

    private void ShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShellActionPerformed
        // TODO add your handling code here:
        llenar();
        if (JA.isSelected()) {
        datos.Shell2(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro el algoritmo");
        }
                
    }//GEN-LAST:event_ShellActionPerformed

    private void QuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuickSortActionPerformed
        // TODO add your handling code here:
        llenar();
        if (JA.isSelected()) {
        datos.quickSort(vec,0,vec.length);
                        for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                            modelo.setValueAt(vec[ren], ren, 0);
                }
        } else {
                        JOptionPane.showMessageDialog(this, "No se encontro el algoritmo");
        }
    }//GEN-LAST:event_QuickSortActionPerformed

    private void BurbujaBanderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BurbujaBanderaActionPerformed
        // TODO add your handling code here:
        llenar();
        if (JA.isSelected()) {
        datos.BurbujaASC_ConSeñal(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                }
        } else {
            datos.BurbujaDSC_ConSeñal(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                }
        }
    }//GEN-LAST:event_BurbujaBanderaActionPerformed

    private void ShellBanderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShellBanderaActionPerformed
        // TODO add your handling code here:
        llenar();
        if (JA.isSelected()) {
        datos.BurbujaASC(vec,this.jLabComp,this.jLabInter);
                    for (int ren = 0; ren < modelo.getRowCount(); ren++) {
                        modelo.setValueAt(vec[ren], ren, 0);
                } 
        } else {
                        JOptionPane.showMessageDialog(this, "No se encontro el algoritmo");
        }
    }//GEN-LAST:event_ShellBanderaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Burbuja;
    private javax.swing.JButton BurbujaBandera;
    private javax.swing.JTextField J1;
    private javax.swing.JRadioButton JA;
    private javax.swing.JRadioButton JD;
    private javax.swing.JButton QuickSort;
    private javax.swing.JButton ShakeSort;
    private javax.swing.JButton Shell;
    private javax.swing.JButton ShellBandera;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSpinner elementos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabComp;
    private javax.swing.JLabel jLabInter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
