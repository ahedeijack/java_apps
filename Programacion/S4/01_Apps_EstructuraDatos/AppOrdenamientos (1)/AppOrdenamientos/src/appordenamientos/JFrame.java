/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appordenamientos;

import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pqdst
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    DefaultTableModel modeloTabla;
    int []vec;
    Ordenamiento datos = new Ordenamiento();
    public JFrame() {
        initComponents();
        modeloTabla = (DefaultTableModel)this.jTable1.getModel();
        modeloTabla.setRowCount(Integer.valueOf(this.jSpinner1.getValue()+""));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG_Datos = new javax.swing.ButtonGroup();
        BG_Metodos = new javax.swing.ButtonGroup();
        BG_Orden = new javax.swing.ButtonGroup();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jRB_Azar = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton_Ascendente = new javax.swing.JRadioButton();
        jRadioButton_Descendente = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton_BurbujaS = new javax.swing.JRadioButton();
        jRadioButton_BurbujaBandera = new javax.swing.JRadioButton();
        jRadioButton_ShakeSort = new javax.swing.JRadioButton();
        jRadioButton_Shell = new javax.swing.JRadioButton();
        jRadioButton_ShellBander = new javax.swing.JRadioButton();
        jRadioButton_QuickSort = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLab_Comparacion = new javax.swing.JLabel();
        jLab_Intercambios = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jRadioButton3.setText("jRadioButton3");

        jRadioButton4.setText("jRadioButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(5, 5, 500, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Datos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Datos..."));

        BG_Datos.add(jRB_Azar);
        jRB_Azar.setText("Aleatorios");
        jRB_Azar.setOpaque(false);
        jRB_Azar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRB_AzarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRB_Azar)
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRB_Azar)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Orden..."));

        BG_Orden.add(jRadioButton_Ascendente);
        jRadioButton_Ascendente.setText("Ascendente");
        jRadioButton_Ascendente.setOpaque(false);
        jRadioButton_Ascendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_AscendenteActionPerformed(evt);
            }
        });

        BG_Orden.add(jRadioButton_Descendente);
        jRadioButton_Descendente.setText("Descendente");
        jRadioButton_Descendente.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton_Ascendente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton_Descendente)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton_Ascendente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_Descendente)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Metodos..."));

        BG_Metodos.add(jRadioButton_BurbujaS);
        jRadioButton_BurbujaS.setText("Burbuja");
        jRadioButton_BurbujaS.setOpaque(false);
        jRadioButton_BurbujaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_BurbujaSActionPerformed(evt);
            }
        });

        BG_Metodos.add(jRadioButton_BurbujaBandera);
        jRadioButton_BurbujaBandera.setText("Burbuja Bandera");
        jRadioButton_BurbujaBandera.setOpaque(false);

        BG_Metodos.add(jRadioButton_ShakeSort);
        jRadioButton_ShakeSort.setText("Shake Sort");
        jRadioButton_ShakeSort.setOpaque(false);
        jRadioButton_ShakeSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_ShakeSortActionPerformed(evt);
            }
        });

        BG_Metodos.add(jRadioButton_Shell);
        jRadioButton_Shell.setText("Shell");
        jRadioButton_Shell.setOpaque(false);
        jRadioButton_Shell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_ShellActionPerformed(evt);
            }
        });

        BG_Metodos.add(jRadioButton_ShellBander);
        jRadioButton_ShellBander.setText("Shell Bandera");
        jRadioButton_ShellBander.setOpaque(false);
        jRadioButton_ShellBander.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_ShellBanderActionPerformed(evt);
            }
        });

        BG_Metodos.add(jRadioButton_QuickSort);
        jRadioButton_QuickSort.setText("QuickSort");
        jRadioButton_QuickSort.setOpaque(false);
        jRadioButton_QuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_QuickSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton_Shell)
                            .addComponent(jRadioButton_BurbujaS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton_BurbujaBandera)
                            .addComponent(jRadioButton_ShellBander)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton_ShakeSort)
                            .addComponent(jRadioButton_QuickSort))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_BurbujaBandera)
                    .addComponent(jRadioButton_BurbujaS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_ShakeSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Shell)
                    .addComponent(jRadioButton_ShellBander))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_QuickSort)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabel3.setText("Numero de datos");

        jLab_Comparacion.setBackground(new java.awt.Color(153, 204, 255));
        jLab_Comparacion.setText("No. Comparaciones");
        jLab_Comparacion.setOpaque(true);

        jLab_Intercambios.setBackground(new java.awt.Color(153, 204, 255));
        jLab_Intercambios.setText("No. Intercambios");
        jLab_Intercambios.setOpaque(true);

        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLab_Comparacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLab_Intercambios, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(17, 17, 17)
                        .addComponent(jLab_Comparacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLab_Intercambios, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRB_AzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRB_AzarActionPerformed
        // TODO add your handling code here:
        Random azar = new Random();
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            modeloTabla.setValueAt(azar.nextInt(900)+100, i, 0);
        }
    }//GEN-LAST:event_jRB_AzarActionPerformed

    private void jRadioButton_BurbujaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_BurbujaSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_BurbujaSActionPerformed

    private void jRadioButton_AscendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_AscendenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_AscendenteActionPerformed

    private void jRadioButton_ShakeSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_ShakeSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_ShakeSortActionPerformed

    private void jRadioButton_ShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_ShellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_ShellActionPerformed

    private void jRadioButton_ShellBanderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_ShellBanderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_ShellBanderActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        modeloTabla.setRowCount(Integer.parseInt(this.jSpinner1.getValue().toString()));
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.jLab_Comparacion.setText("No comparaciones : ");
        this.jLab_Intercambios.setText("No. Intercambios : ");
        
        /*
        en este metodo quedara la creacion del objeto ordenamiento
        y sus metodos
        */
        //Ascendentes
        if(this.jRadioButton_Ascendente.isSelected()){
            if(this.jRadioButton_BurbujaS.isSelected()){//burbuja simple
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.BurbujaASC(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }else if(this.jRadioButton_BurbujaBandera.isSelected()){//burbuja con bandera
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.BurbujaASC_ConSeñal(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }else if(this.jRadioButton_ShakeSort.isSelected()){//shake sort
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.Shaker_SortASC(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }else if(this.jRadioButton_Shell.isSelected()){//shell simple
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.Shell2(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }else if(this.jRadioButton_ShellBander.isSelected()){
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.BurbujaASC(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }else if(this.jRadioButton_QuickSort.isSelected()){
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.quickSort(vec,0,vec.length);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }
            
            //Descentes
        }else if(this.jRadioButton_Descendente.isSelected()){
            if(this.jRadioButton_BurbujaS.isSelected()){//burbuja simple
                int []vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++) {
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                datos.BurbujaDSC(vec, this.jLab_Comparacion,this.jLab_Intercambios);
                for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }else if(this.jRadioButton_BurbujaBandera.isSelected()){//burbuja con bandera
                for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) 
                    vec[ren] = Integer.parseInt(modeloTabla.getValueAt(ren, 0).toString());
                    
                datos.BurbujaDSC_ConSeñal(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                for (int i = 0; i < modeloTabla.getRowCount(); i++) 
                    modeloTabla.setValueAt(vec[i], i,0);
  
            }else if(this.jRadioButton_ShakeSort.isSelected()){//shake sort
                int[]vec = new int [this.jTable1.getRowCount()];
                for (int i = 0; i < vec.length; i++){
                    vec[i] = Integer.parseInt((modeloTabla.getValueAt(i, 0).toString()));
                }
                    datos.Shaker_SortDSC(vec,this.jLab_Comparacion,this.jLab_Intercambios);
                    for (int ren = 0; ren < modeloTabla.getRowCount(); ren++) {
                    modeloTabla.setValueAt(vec[ren], ren, 0);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton_QuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_QuickSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_QuickSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BG_Datos;
    private javax.swing.ButtonGroup BG_Metodos;
    private javax.swing.ButtonGroup BG_Orden;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLab_Comparacion;
    private javax.swing.JLabel jLab_Intercambios;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRB_Azar;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton_Ascendente;
    private javax.swing.JRadioButton jRadioButton_BurbujaBandera;
    private javax.swing.JRadioButton jRadioButton_BurbujaS;
    private javax.swing.JRadioButton jRadioButton_Descendente;
    private javax.swing.JRadioButton jRadioButton_QuickSort;
    private javax.swing.JRadioButton jRadioButton_ShakeSort;
    private javax.swing.JRadioButton jRadioButton_Shell;
    private javax.swing.JRadioButton jRadioButton_ShellBander;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
