/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pb_18131288_proyecto_04;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import static java.lang.System.exit;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ahedeijak
 */
public class PB_18131288_JFramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form PB_18131288_JFramePrincipal
     */
    Random azar;
    DefaultTableModel modelo;
    JFileChooser jfch = new JFileChooser();
    public PB_18131288_JFramePrincipal() {
        initComponents();
        grupoboton.add(jRRojo);
        grupoboton.add(jRVerde);
        grupoboton.add(jRAzul);
        grupoboton.add(jRNaranja);
        grupoboton.add(jRAmarillo);
        grupoboton.add(jRMagenta);
        
        modelo = (DefaultTableModel)jTabDatos.getModel();
        jSpinDib.setValue(1);
        azar = new Random();
        jTabDatos.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        grupoboton = new javax.swing.ButtonGroup();
        jPan = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabDatos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSpinDib = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jRMagenta = new javax.swing.JRadioButton();
        jRRojo = new javax.swing.JRadioButton();
        jRVerde = new javax.swing.JRadioButton();
        jRAzul = new javax.swing.JRadioButton();
        jRNaranja = new javax.swing.JRadioButton();
        jRAmarillo = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jButLlenar = new javax.swing.JButton();
        jButDibujar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuNuevo = new javax.swing.JMenuItem();
        jMenuGuardar = new javax.swing.JMenuItem();
        jMenuAbrir = new javax.swing.JMenuItem();
        jMenuSalirYGuardar = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(730, 540));
        getContentPane().setLayout(null);

        jPan.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanLayout = new javax.swing.GroupLayout(jPan);
        jPan.setLayout(jPanLayout);
        jPanLayout.setHorizontalGroup(
            jPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanLayout.setVerticalGroup(
            jPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        getContentPane().add(jPan);
        jPan.setBounds(370, 0, 420, 510);

        jTabDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "POS X", "POS Y", "LADOS"
            }
        ));
        jScrollPane1.setViewportView(jTabDatos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 370, 86);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pb_18131288_proyecto_04/asignacion.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 290, 370, 220);

        jSpinDib.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinDibStateChanged(evt);
            }
        });
        getContentPane().add(jSpinDib);
        jSpinDib.setBounds(280, 160, 60, 30);

        jLabel2.setText("Dibujos");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 160, 250, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 190, 370, 10);

        jRMagenta.setText("Magenta");
        getContentPane().add(jRMagenta);
        jRMagenta.setBounds(200, 250, 93, 23);

        jRRojo.setText("Rojo");
        getContentPane().add(jRRojo);
        jRRojo.setBounds(10, 220, 80, 23);

        jRVerde.setText("Verde");
        jRVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRVerdeActionPerformed(evt);
            }
        });
        getContentPane().add(jRVerde);
        jRVerde.setBounds(110, 220, 80, 23);

        jRAzul.setText("Azul");
        getContentPane().add(jRAzul);
        jRAzul.setBounds(200, 220, 70, 23);

        jRNaranja.setText("Naranja");
        getContentPane().add(jRNaranja);
        jRNaranja.setBounds(10, 250, 80, 23);

        jRAmarillo.setText("Amarillo");
        getContentPane().add(jRAmarillo);
        jRAmarillo.setBounds(110, 250, 80, 23);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Color");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 200, 330, 14);

        jButLlenar.setText("Llenar");
        jButLlenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButLlenarActionPerformed(evt);
            }
        });
        getContentPane().add(jButLlenar);
        jButLlenar.setBounds(0, 90, 180, 23);

        jButDibujar.setText("Dibujar");
        jButDibujar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButDibujarActionPerformed(evt);
            }
        });
        getContentPane().add(jButDibujar);
        jButDibujar.setBounds(190, 90, 180, 23);

        jButton1.setText("Borrar Dibujos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(0, 120, 370, 23);

        jMenu1.setText("Archivo");

        jMenuNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuNuevo.setText("Nuevo");
        jMenuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuNuevo);

        jMenuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuGuardar.setText("Guardar");
        jMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuGuardar);

        jMenuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuAbrir.setText("Abrir");
        jMenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuAbrir);

        jMenuSalirYGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuSalirYGuardar.setText("Salir y Guardar");
        jMenuSalirYGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSalirYGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSalirYGuardar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNuevoActionPerformed
        //Borramos los datos del frame actual
        //Borramos los datos de la tabla, a su vez, ponemos el Spinner en valor 1 
        for(int r = 0; r<modelo.getRowCount(); r++){
            modelo.setValueAt("", r, 0);
            modelo.setValueAt("", r, 1);
            modelo.setValueAt("", r, 2);
            modelo.setValueAt("", r, 3);
        }
        
        modelo.setRowCount(1);
        
        repaint();
    }//GEN-LAST:event_jMenuNuevoActionPerformed

    private void jRVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRVerdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRVerdeActionPerformed

    private void jSpinDibStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinDibStateChanged
        // TODO add your handling code here:
        //Para poner los renglones en nuestra tabla.
        try{
        modelo.setRowCount((int)jSpinDib.getValue());
        
        } catch(java.lang.ArrayIndexOutOfBoundsException e){//Ya que vimos excepciones, hago un try para evitar que la tabla tenga un valor menor a 0
            
            JOptionPane.showMessageDialog(rootPane, "Tiene que existir al menos un valor positivo.");
            jSpinDib.setValue(1);
        }
    }//GEN-LAST:event_jSpinDibStateChanged

    private void jButLlenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButLlenarActionPerformed
        // TODO add your handling code here:
        
        //Llenamos con valores aleatorios
        for(int r = 0; r<modelo.getRowCount(); r++){
            modelo.setValueAt((r+1), r, 0);
            modelo.setValueAt(""+(azar.nextInt(200)+5), r, 1);
            modelo.setValueAt(""+(azar.nextInt(400)+5), r, 2);
            modelo.setValueAt(""+(azar.nextInt(50)+10), r, 3);
        }
        
    }//GEN-LAST:event_jButLlenarActionPerformed

    private void jButDibujarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButDibujarActionPerformed
        // TODO add your handling code here:
        
        try{
         Dibujo [] datos = new Dibujo[modelo.getRowCount()];
         int color;
         
         //Seleccionamos el color de nuestros cuadrados, si no esta ninguno seleccionado pues mandamos un valor de 0
         //que en nuestra clase dibujo, el valor 0 da un color especifico.
         if(jRRojo.isSelected()){
             color = 1;
         } else if (jRVerde.isSelected()){
             color = 2;
         } else if (jRAzul.isSelected()){
             color = 3;
         } else if (jRAmarillo.isSelected()){
             color = 4;
         } else if (jRNaranja.isSelected()){
             color = 5;
         } else if (jRMagenta.isSelected()){
             color = 6;
         } else {
             color = 0;
         }
       
        
        for(int i = 0; i<datos.length; i++){
            datos[i] = new Dibujo(Integer.parseInt(modelo.getValueAt(i, 0)+""),
                                  Integer.parseInt(modelo.getValueAt(i, 1)+""),
                                  Integer.parseInt(modelo.getValueAt(i, 2)+""),
                                  Integer.parseInt(modelo.getValueAt(i, 3)+""),
                                  color);
        }
        
        for(int i = 0; i<datos.length; i++){
            datos[i].dibujar(jPan);
        }
        } catch(java.lang.NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "La tabla tiene datos vacios. ");
    }
    }//GEN-LAST:event_jButDibujarActionPerformed

    private void jMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGuardarActionPerformed
        // TODO add your handling code here:
     
        jfch.showSaveDialog(jMenu1);
        
        File archivo = jfch.getSelectedFile();
        
        if (archivo == null) 
            return;
        
        FileOutputStream fos = null;
        DataOutputStream dos = null;
        
        try
        {
            fos = new FileOutputStream(archivo);
            dos = new DataOutputStream(fos);
            
            //Guardamos el numero de dibujos, posterior guardamos la informacion de los dibujos.
            dos.writeInt(Integer.parseInt(jSpinDib.getValue()+""));
            
            
            for (int r=0; r<modelo.getRowCount(); r++)
            {
                dos.writeUTF(modelo.getValueAt(r, 0)+"");
                
                for (int c=0; c<modelo.getColumnCount(); c++)
                    dos.writeInt(Integer.parseInt(modelo.getValueAt(r, c)+""));
            }
            
            JOptionPane.showMessageDialog(this, "Archivo Guardado.");
        }
        catch (IOException ex)
        {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            try
            {
                if (dos!=null)
                    dos.close();
                if (fos!=null)
                    fos.close();
            }
            catch (IOException ex)
            {
                Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jMenuGuardarActionPerformed

    private void jMenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAbrirActionPerformed
        // TODO add your handling code here:
        repaint();
        jfch.showOpenDialog(jMenu1);
        
        File archivo = jfch.getSelectedFile();
        
        if (archivo == null)
            return;

        FileInputStream fis = null;
        DataInputStream dis = null;

        try
        {
            fis = new FileInputStream(archivo);
            dis = new DataInputStream(fis);
            
            int n = dis.readInt();
            
            modelo.setRowCount(n);
            
            for (int r=0; r<n; r++)
            {
                modelo.setValueAt(dis.readUTF(), r, 0);
                
                for (int c=0; c<modelo.getColumnCount(); c++)
                    modelo.setValueAt(dis.readInt(), r, c);
            }
            //Despues de abrir y llenar nuestra tabla, hacemos un doClick en el boton para dibujar.
            jButDibujar.doClick();
            
        }
        catch (FileNotFoundException ex)
        {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex)
        {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            try
            {
                if (dis!=null)
                    dis.close();

                if (fis!=null)
                    fis.close();
            }
            catch (IOException ex)
            {
                Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jMenuAbrirActionPerformed

    private void jMenuSalirYGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSalirYGuardarActionPerformed
        // TODO add your handling code here:
        //En ocasiones tenemos que salir rapido, por lo cual hago un metodo para hacer un guardado y salida.
        jMenuGuardar.doClick();
        exit(0);
        
    }//GEN-LAST:event_jMenuSalirYGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PB_18131288_JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PB_18131288_JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PB_18131288_JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PB_18131288_JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PB_18131288_JFramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoboton;
    private javax.swing.JButton jButDibujar;
    private javax.swing.JButton jButLlenar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuAbrir;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuGuardar;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuNuevo;
    private javax.swing.JMenuItem jMenuSalirYGuardar;
    private javax.swing.JPanel jPan;
    private javax.swing.JRadioButton jRAmarillo;
    private javax.swing.JRadioButton jRAzul;
    private javax.swing.JRadioButton jRMagenta;
    private javax.swing.JRadioButton jRNaranja;
    private javax.swing.JRadioButton jRRojo;
    private javax.swing.JRadioButton jRVerde;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinDib;
    private javax.swing.JTable jTabDatos;
    // End of variables declaration//GEN-END:variables
}
