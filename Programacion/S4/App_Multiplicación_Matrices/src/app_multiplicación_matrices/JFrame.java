/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app_multiplicación_matrices;

import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahdeijack
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    DefaultTableModel modeloA;
    DefaultTableModel modeloB;
    DefaultTableModel modeloC;
    public JFrame() {
        initComponents();
        modeloA=(DefaultTableModel)this.jTab1.getModel();
        modeloB=(DefaultTableModel)this.jTab2.getModel();
        modeloC=(DefaultTableModel)this.jTable3.getModel();
        
        this.jTab1.setShowGrid(true);
        this.jTab2.setShowGrid(true);
        this.jTable3.setShowGrid(true);
    }
    public void multiplicarM(int [][] matA, int [][] matB, int [][]matR)
    {
        if(matA[0].length == matB.length)
        {
            //int suma;
            for(int r=0; r<matA.length; r++)
            {
                for(int c=0; c<matB[0].length; c++)
                {   
                    matR[r][c] = 0;
                    for(int k=0; k<matB[0].length; k++)
                    {    
                        /*suma*/ matR[r][c]+= matA[r][k] * matB[k][c];
                    }    
                    //matR[r][c] = suma;
                }   
            }    
        }
        else
            JOptionPane.showMessageDialog(null,"No se pueden multiplicar");
        
        for (int i = 0; i < matR.length; i++) {
            for (int j = 0; j < matR[0].length; j++) {
                System.out.print(matR[i][j]);
            }
            System.out.println(" ");
        }
    }
    
     public void mostrar(int [][]matriz, JTable tab){
         
          for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[0].length; j++) {
                tab.setValueAt(matriz[i][j], i, j);
            }
        }  
     }
     
     public void llenar(int [][] matriz, JTable tab){
         for (int i = 0; i < matriz.length; i++) {
             for (int j = 0; j < matriz[0].length; j++) {
                 matriz[i][j] = (int)tab.getValueAt(i, j);
             }
         }
     }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTab1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTab2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButt_Azar = new javax.swing.JButton();
        jButt_Borrar = new javax.swing.JButton();
        jButt_Calcular = new javax.swing.JButton();
        ren1 = new javax.swing.JSpinner();
        col1 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        col2 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        ren2 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jTab1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTab1);

        jTab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTab2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Ink Free", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");

        jLabel3.setBackground(new java.awt.Color(51, 51, 255));
        jLabel3.setFont(new java.awt.Font("Ink Free", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("=");

        jButt_Azar.setText("Datos Aleatorios");
        jButt_Azar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButt_AzarActionPerformed(evt);
            }
        });

        jButt_Borrar.setText("Borrar");
        jButt_Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButt_BorrarActionPerformed(evt);
            }
        });

        jButt_Calcular.setText("Multiplicar");
        jButt_Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButt_CalcularActionPerformed(evt);
            }
        });

        ren1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        ren1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ren1StateChanged(evt);
            }
        });

        col1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        col1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                col1StateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ink Free", 0, 12)); // NOI18N
        jLabel4.setText("Renglon");

        jLabel5.setFont(new java.awt.Font("Ink Free", 0, 12)); // NOI18N
        jLabel5.setText("Columna");

        jLabel6.setFont(new java.awt.Font("Ink Free", 0, 12)); // NOI18N
        jLabel6.setText("Columna");

        col2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        col2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                col2StateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ink Free", 0, 12)); // NOI18N
        jLabel7.setText("Renglon");

        ren2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        ren2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ren2StateChanged(evt);
            }
        });

        jButton1.setText("Ejemplo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Multiplicación de matrices. GUI");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ren1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addGap(30, 30, 30)
                                        .addComponent(col1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(ren2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addGap(30, 30, 30)
                                        .addComponent(col2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButt_Calcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButt_Azar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButt_Borrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ren1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(col1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(ren2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(col2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButt_Calcular)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButt_Azar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButt_Borrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButt_CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButt_CalcularActionPerformed
        // TODO add your handling code here:
        try{
        int [][]MatrizA = new int[this.jTab1.getRowCount()][this.jTab1.getColumnCount()];
        int [][]MatrizB = new int[this.jTab2.getRowCount()][this.jTab2.getColumnCount()];
        int [][]MatrizC = new int[this.jTab1.getRowCount()][this.jTab2.getColumnCount()];
        modeloC.setRowCount(jTab1.getRowCount());
        modeloC.setColumnCount(jTab2.getColumnCount());
        
        
        llenar(MatrizA, jTab1);
        llenar(MatrizB, jTab2);
        multiplicarM(MatrizA,MatrizB,MatrizC);
        mostrar(MatrizC, jTable3);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Una de las matrices esta vacía o tiene un dato erroneo. "+e);
        }
        
    }//GEN-LAST:event_jButt_CalcularActionPerformed

    private void jButt_AzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButt_AzarActionPerformed
        // TODO add your handling code here:
    
        Random azar = new Random();
        for(int i=0; i<jTab1.getRowCount(); i++){
            for(int j=0; j<jTab1.getColumnCount(); j++){
                jTab1.setValueAt(azar.nextInt(9)+1, i, j);
                jTab2.setValueAt(azar.nextInt(9)+1, i, j);
            }
        }
    }//GEN-LAST:event_jButt_AzarActionPerformed

    private void ren1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ren1StateChanged
        // TODO add your handling code here:
        int rengs = (int)ren1.getValue();
        modeloA.setRowCount(rengs);
    }//GEN-LAST:event_ren1StateChanged

    private void col1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_col1StateChanged
        // TODO add your handling code here:
        int cols = (int)col1.getValue();
        modeloA.setColumnCount(cols);
    }//GEN-LAST:event_col1StateChanged

    private void ren2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ren2StateChanged
        // TODO add your handling code here:
       int rengs = (int)ren2.getValue();
        modeloB.setRowCount(rengs);
    }//GEN-LAST:event_ren2StateChanged

    private void col2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_col2StateChanged
        // TODO add your handling code here:
        int cols = (int)col2.getValue();
        modeloB.setColumnCount(cols);
    }//GEN-LAST:event_col2StateChanged

    private void jButt_BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButt_BorrarActionPerformed
        // TODO add your handling code here:
        ren1.setValue(0);
        col1.setValue(0);
        
        ren2.setValue(0);
        col2.setValue(0);
        
        
        modeloC.setRowCount(0);
        modeloC.setColumnCount(0);
    }//GEN-LAST:event_jButt_BorrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"No k no pendejo?");

        modeloA.setRowCount(3);
        modeloA.setColumnCount(3);
        
        modeloB.setRowCount(3);
        modeloB.setColumnCount(3);
        
       int cont = 1;
        for (int i = 0; i < jTab1.getRowCount(); i++) {
            for (int j = 0; j < jTab1.getColumnCount(); j++) {
                jTab1.setValueAt(cont, i, j);
                jTab2.setValueAt(cont, i, j);
                cont++;
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner col1;
    private javax.swing.JSpinner col2;
    private javax.swing.JButton jButt_Azar;
    private javax.swing.JButton jButt_Borrar;
    private javax.swing.JButton jButt_Calcular;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTab1;
    private javax.swing.JTable jTab2;
    private javax.swing.JTable jTable3;
    private javax.swing.JSpinner ren1;
    private javax.swing.JSpinner ren2;
    // End of variables declaration//GEN-END:variables
}
